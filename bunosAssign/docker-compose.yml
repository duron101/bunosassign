version: '3.8'

services:
  # MySQL数据库 (可选，主要用于生产环境)
  mysql:
    image: mysql:8.0
    container_name: bonus-system-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-bonus_system}
      MYSQL_USER: ${MYSQL_USER:-bonus_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-bonus_pass}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --max-connections=1000
    networks:
      - bonus-network
    profiles:
      - mysql
      - production

  # Redis缓存（可选，用于会话存储和缓存）
  redis:
    image: redis:7-alpine
    container_name: bonus-system-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - bonus-network
    profiles:
      - redis
      - production
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: bonus-system-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-3000}
      DB_TYPE: ${DB_TYPE:-nedb}  # 支持 nedb/mysql
      DB_HOST: ${DB_HOST:-mysql}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME:-bonus_system}
      DB_USER: ${DB_USER:-bonus_user}
      DB_PASSWORD: ${DB_PASSWORD:-bonus_pass}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-2h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_INTERNAL_PORT:-6379}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      # 开发模式：实时代码同步
      - ./backend:/app:${VOLUME_MODE:-cached}
      - /app/node_modules
      # NeDB数据持久化
      - nedb_data:/app/database
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
        required: false
      redis:
        condition: service_healthy  
        required: false
    networks:
      - bonus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_URL: ${BACKEND_URL:-http://backend:3000}
        NODE_ENV: ${NODE_ENV:-development}
    container_name: bonus-system-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    volumes:
      # 开发模式：nginx配置热重载
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bonus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库管理工具 (可选)
  adminer:
    image: adminer:latest
    container_name: bonus-system-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    depends_on:
      - mysql
    networks:
      - bonus-network
    profiles:
      - mysql
      - tools
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local  
  nedb_data:
    driver: local
  backend_logs:
    driver: local
  frontend_logs:
    driver: local

networks:
  bonus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16