# 生产环境配置
version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: bonus-system-mysql-prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: bonus_system
      MYSQL_USER: bonus_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    command: --default-authentication-plugin=mysql_native_password --max-connections=1000
    networks:
      - bonus-network
    secrets:
      - mysql_root_password
      - mysql_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: bonus-system-redis-prod
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}"
    networks:
      - bonus-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: bonus-system-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: bonus_system
      DB_USER: bonus_user
      JWT_EXPIRES_IN: 2h
      JWT_REFRESH_EXPIRES_IN: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_LEVEL: info
    env_file:
      - .env.production
    ports:
      - "3000:3000"
    volumes:
      - backend_logs:/app/logs
      - nedb_data:/app/database
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bonus-network
    secrets:
      - jwt_secret
      - jwt_refresh_secret
      - mysql_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: bonus-system-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - frontend_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bonus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # 数据库管理工具
  adminer:
    image: adminer:latest
    container_name: bonus-system-adminer-prod
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - bonus-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nedb_data:
    driver: local
  backend_logs:
    driver: local
  frontend_logs:
    driver: local

networks:
  bonus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

secrets:
  mysql_root_password:
    file: ./docker/secrets/mysql_root_password.txt
  mysql_password:
    file: ./docker/secrets/mysql_password.txt
  jwt_secret:
    file: ./docker/secrets/jwt_secret.txt
  jwt_refresh_secret:
    file: ./docker/secrets/jwt_refresh_secret.txt